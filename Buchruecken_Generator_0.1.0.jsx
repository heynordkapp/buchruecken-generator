var myDocument;    if(app.documents.length > 0){        myDocument = app.activeDocument;        }else{        myDocument = app.documents.add();         }//var myTextFrame = myDocument.pages.item (0).textFrames.add();var myBookMaster = myDocument.masterSpreads.add ();//make form windowfunction myInput () {var myWindow = new Window ("dialog", "Buchdicke angeben");myWindow.orientation = "row";var myInputGroup = myWindow.add ("group"); myInputGroup.add ("statictext", undefined, "Buchdicke:"); var myText = myInputGroup.add ("edittext", undefined, "10 mm"); myText.characters = 20; myText.active = true; myText.text = convert_units ("10mm", documentUnits());var myButtonGroup = myWindow.add ("group"); myButtonGroup.orientation = "column"; myButtonGroup.add ("button", undefined, "OK"); myButtonGroup.add ("button", undefined, "Cancel");if (myWindow.show () == 1)return myText.text;elseexit ();}//measurements functionsfunction convert_units (n, to) {var unitConversions = { 'pt': 1.0000000000, 'p': 12.0000000000, 'mm': 2.8346456692, 'in': 72.00000000, 'ag': 5.1428571428, 'cm': 28.3464566929, 'c': 12.7878751998, 'tr': 3.0112500000}var obj = fix_measurement (n);var temp = (obj.amount * unitConversions[obj.unit]) / unitConversions[to];return output_format (temp, to)}function output_format (amount, target) {// Add the target unit to the amount, either suffixed pt, ag, mm, cm, in, or infixed p or c// The decimals, no trailing zerosamount = amount.toFixed(3).replace(/\.?0+$/, '');if (target.length == 2) { // two-character unit: pt, mm, etc. return String (amount) + ' ' + target;} else {// 'p' or 'c' // calculate the decimal var decimal = (Number (amount) - parseInt (amount)) * 12; // return the integer part of the result + infix + formatted decimal return parseInt (amount) + target + decimal; }}function fix_measurement (n) {n = n.replace(/ /g, ''); // Delete all spacesn = n.replace (/^([pc])/, '0$1'); // Change p3 to 0p3// Infixed 'p' and 'c' to decimal suffixes: 3p6 > 3.5 pn = n.replace (/(\d+)([pc])([.\d]+)$/, function () { return Number (arguments[1]) + Number (arguments[3]/12) + arguments[2]});// Split on unitvar temp = n.split (/(ag|cm|mm|c|pt|p|in)$/);return { amount: Number (temp[0]), unit: temp.length === 1 ? doc_units() : temp[1]};}function documentUnits () {switch (app.documents[0].viewPreferences.horizontalMeasurementUnits){ case 2051106676: return 'ag'; case 2053336435: return 'cm'; case 2053335395: return 'c'; case 2053729891: return 'in'; case 2053729892: return 'in'; case 2053991795: return 'mm'; case 2054187363: return 'p'; case 2054188905: return 'pt'; }}//change book backside functionsfunction setWidthHeight(/*PageItem*/o, /*str*/w, /*str*/h, /*bool=false*/useVisibleBounds){  if( !o.resize ) return;    var CS_INNER = CoordinateSpaces.INNER_COORDINATES,  BB = BoundingBoxLimits[(useVisibleBounds?'OUTER_STROKE':'GEOMETRIC_PATH') + '_BOUNDS'];    var wPt = UnitValue(w).as('pt'),  hPt = UnitValue(h).as('pt');    if( 0 >= wPt || 0 >= hPt ) return;    o.marginPreferences.properties = {        left: 0,        right: 0,        };    o.resize(  [CS_INNER,BB],  AnchorPoint.CENTER_ANCHOR,  ResizeMethods.REPLACING_CURRENT_DIMENSIONS_WITH,  [wPt,hPt,CS_INNER]  );} //add 3rd pagemyBookMaster.pages.add();  //Buchrücken auf Musterseite erstellensetWidthHeight(myBookMaster.pages.item(1), myInput(), myDocument.documentPreferences.properties.pageHeight + documentUnits ());myDocument.documentPreferences.allowPageShuffle = false;myDocument.documentPreferences.preserveLayoutWhenShuffling = true;/*if (myDocument.sections.firstItem()){myDocument.sections.firstItem().continueNumbering = false;myDocument.sections.firstItem().pageNumberStart = 1;}else {myDocument.sections.add(myDocument.pages[0],{continueNumbering:false, pageNumberStart:1});}*/var mySpread = myDocument.spreads.add(LocationOptions.BEFORE,myDocument.spreads[0],{appliedMaster:myBookMaster});mySpread.allowPageShuffle = false;mySpread.pages.add();myUmschlag = myDocument.sections.add(myDocument.pages[0],{sectionPrefix:"U"});myUmschlag = myDocument.sections.add(myDocument.pages[1],{continueNumbering:false, pageNumberStart:1, sectionPrefix:"R"});myUmschlag = myDocument.sections.add(myDocument.pages[2],{continueNumbering:false, pageNumberStart:2, sectionPrefix:"U"});myUmschlag = myDocument.sections.add(myDocument.pages[3],{continueNumbering:false, pageNumberStart:1, sectionPrefix:""});