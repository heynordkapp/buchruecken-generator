main();function main(){   //Dokument vorhanden? Sonst neues Erstellenvar myDocument;    if(app.documents.length > 0){        myDocument = app.activeDocument;        }else{        myDocument = app.documents.add();         }myDisplayDialog(myDocument)}//Musterseiten und Dokumentseiten erzeugenfunction myBookcover(myDocument, myBookThicknessPT, myFlapleftPT, myFlaprightPT){var FlapleftOffset = 0;var FlaprightOffset = 0;//Musterseite erstellen und dritte Seite hinzufügenvar myBookMaster = myDocument.masterSpreads.add ();myBookMaster.pages.add(); if(myFlapleftPT){    myBookMaster.pages.add();     var FlapleftOffset = 1;    setWidthHeight(myBookMaster.pages.item(0), myFlapleftPT, myDocument.documentPreferences.properties.pageHeight + documentUnits ());};if(myFlaprightPT){    myBookMaster.pages.add();     var FlaprightOffset = 1;    setWidthHeight(myBookMaster.pages.item(3+FlapleftOffset), myFlaprightPT, myDocument.documentPreferences.properties.pageHeight + documentUnits ());    };//Buchrücken auf Musterseite erstellensetWidthHeight(myBookMaster.pages.item(1+FlapleftOffset), myBookThicknessPT, myDocument.documentPreferences.properties.pageHeight + documentUnits ());//Dokumentseitenanordnung zulassenmyDocument.documentPreferences.allowPageShuffle = false;myDocument.documentPreferences.preserveLayoutWhenShuffling = true;//Umschlag erstellenvar mySpread = myDocument.spreads.add(LocationOptions.BEFORE,myDocument.spreads[0],{appliedMaster:myBookMaster});mySpread.allowPageShuffle = false;mySpread.pages.add();if(myFlapleftPT){mySpread.pages.add();myLascheLinks = myDocument.sections.add(myDocument.pages[0],{continueNumbering:false, pageNumberStart:4, sectionPrefix:"F"});setWidthHeight(mySpread.pages.item(2), myBookThicknessPT, myDocument.documentPreferences.properties.pageHeight + documentUnits ());setWidthHeight(mySpread.pages.item(3), myDocument.documentPreferences.properties.pageWidth + documentUnits (), myDocument.documentPreferences.properties.pageHeight + documentUnits ());}if(myFlaprightPT){mySpread.pages.add();myLascheRechts = myDocument.sections.add(myDocument.pages[3+FlapleftOffset],{continueNumbering:false, pageNumberStart:1, sectionPrefix:"F"});setWidthHeight(mySpread.pages.item(3+FlapleftOffset), myFlaprightPT, myDocument.documentPreferences.properties.pageHeight + documentUnits ());}//Umschlag sinnvoll paginierenmyUmschlag = myDocument.sections.add(myDocument.pages[0+FlapleftOffset],{continueNumbering:false, pageNumberStart:4, sectionPrefix:"U"});myRuecken = myDocument.sections.add(myDocument.pages[1+FlapleftOffset],{continueNumbering:false, pageNumberStart:1, sectionPrefix:"R"});myUmschlag2 = myDocument.sections.add(myDocument.pages[2+FlapleftOffset],{continueNumbering:false, pageNumberStart:1, sectionPrefix:"U"});//Hat die Startseite schon einen Sektionsanfang?var neuDo = false;	for(var myCounter = 0; myCounter < myDocument.sections.length; myCounter ++){		if(myDocument.sections[myCounter].pageStart.id == myDocument.pages[3+FlapleftOffset+FlaprightOffset].id){            var neuDo = true;            };	}//Wenn nicht, Sektionsanfang auf Startseite mit Seitenzahl 1if(neuDo == false){myDocument.sections.add(myDocument.pages[3+FlapleftOffset+FlaprightOffset],{continueNumbering:false, pageNumberStart:1, sectionPrefix:""});};    }//ui dialogfunction myDisplayDialog(myDocument){	var myLabelWidth = 90;	var myDialog = app.dialogs.add({name:"Buchrücken einstellen"});	with(myDialog.dialogColumns.add()){				with(dialogRows.add()){			with(dialogColumns.add()){				staticTexts.add({staticLabel:"Buchstärke:", minWidth:myLabelWidth});			}			with(dialogColumns.add()){				var myBookThickness = measurementEditboxes.add({editValue:10, editUnits:app.documents[0].viewPreferences.horizontalMeasurementUnits});			}		}		            var myFlapleftGroup = enablingGroups.add({staticLabel:"Umschlagklappe links", checkedState:false});			with (myFlapleftGroup){				with(borderPanels.add()){					/*staticTexts.add({staticLabel:"Options:"});*/					with (dialogColumns.add()){						staticTexts.add({staticLabel:"Breite Umschlagklappe:"});					}					with (dialogColumns.add()){						var myFlapleft = measurementEditboxes.add({editValue:10, editUnits:app.documents[0].viewPreferences.horizontalMeasurementUnits});					}				}			}                 var myFlaprightGroup = enablingGroups.add({staticLabel:"Umschlagklappe rechts", checkedState:false});			with (myFlaprightGroup){				with(borderPanels.add()){					/*staticTexts.add({staticLabel:"Options:"});*/					with (dialogColumns.add()){						staticTexts.add({staticLabel:"Breite Umschlagklappe:"});					}					with (dialogColumns.add()){						var myFlapright = measurementEditboxes.add({editValue:10, editUnits:app.documents[0].viewPreferences.horizontalMeasurementUnits});					}				}			}	}	var myResult = myDialog.show();	if(myResult == true){		var myBookThicknessPT = myBookThickness.editValue + "pt";         if(myFlapleftGroup.checkedState != false){         var myFlapleftPT = myFlapleft.editValue + "pt";         }         if(myFlaprightGroup.checkedState != false){         var myFlaprightPT = myFlapright.editValue + "pt";         }         myBookcover (myDocument, myBookThicknessPT, myFlapleftPT, myFlaprightPT)		myDialog.destroy();		/*return myBookThicknessPT;*/	}	else{		myDialog.destroy();	}}//use documents units for heightfunction documentUnits () {switch (app.documents[0].viewPreferences.horizontalMeasurementUnits){ case 2051106676: return 'ag'; case 2053336435: return 'cm'; case 2053335395: return 'c'; case 2053729891: return 'in'; case 2053729892: return 'in'; case 2053991795: return 'mm'; case 2054187363: return 'p'; case 2054188905: return 'pt'; }}//change book backside functionsfunction setWidthHeight(/*PageItem*/o, /*str*/w, /*str*/h, /*bool=false*/useVisibleBounds) {  if( !o.resize ) return;    var CS_INNER = CoordinateSpaces.INNER_COORDINATES,  BB = BoundingBoxLimits[(useVisibleBounds?'OUTER_STROKE':'GEOMETRIC_PATH') + '_BOUNDS'];    var MarLeft = UnitValue(o.marginPreferences.properties.left + documentUnits ()).as('pt');  var MarRight = UnitValue(o.marginPreferences.properties.right + documentUnits ()).as('pt');    var wPt = UnitValue(w).as('pt'),  hPt = UnitValue(h).as('pt');    if( 0 >= wPt || 0 >= hPt ) return;    if(wPt < MarLeft+MarRight){  o.marginPreferences.properties = {        left: 0,        right: 0,        };  }  o.resize(  [CS_INNER,BB],  AnchorPoint.CENTER_ANCHOR,  ResizeMethods.REPLACING_CURRENT_DIMENSIONS_WITH,  [wPt,hPt,CS_INNER]  );} 